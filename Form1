using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace BellCurve
{
    public partial class Form1 : Form
    {
        PointF[] points;
        Color[] colors = { Color.Red, Color.Orange, Color.Yellow, Color.Green, Color.Blue, Color.Indigo, Color.Purple };
        Graphics g;
        int margin = 50;
        public Form1()
        {
            InitializeComponent();
            
            textBox1.Click += textBox1_Click;
            n.Click += n_Click;
            Possibility.Click += p_Click;

            Paint += Form1_Paint;

            start.Location = new Point(1300,90);
            test.Location = new Point(1300,120);
            Possibility.Location = new Point(1300, 180);
            textBox1.Location = new Point(1300,210);
            n.Location = new Point(1300,240);
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            Width = 1920;
            Height = 1080;
            Location = new Point(0, 0);
        }

        private void Form1_Paint(object sender, EventArgs e)
        {
            g = CreateGraphics();
            g.DrawRectangle(new Pen(Color.Black, 1), new Rectangle(margin, margin, 1200, 600));
        }

        Random r = new Random();
        public PointF[] Points { get => points; set => points = value; }


        private void test_Click(object sender, EventArgs e)
        {
            PaintGraph();
        }

        private Point[] GetBinomialCoefficient()
        {
            int X = 10;// int.Parse(textBox1.Text);       //도수
            int[] arr = new int[X];
            int Y = 100;                    //한 도수가 갖는 최댓값
            Point[] drawSpots = new Point[arr.Length];

            for (int i = 0; i < X; i++)
            {
                for(int j = 0; j < Y; j++)
                {
                    
                    if (r.Next() % 2==0)
                    {
                        arr[i] += 1;
                    }
                }
            }
            int[] mark = new int[Y];
            
            for(int i = 0 ; i < X ; i++)
            {
                mark[arr[i]] += 1;
            }

            for(int i = 0; i < X; i++)
            {
                drawSpots[i] = new Point(margin+i*(1200 - margin) / (arr.Length-1), 600 - (600 * (mark[i] / Y)));
            }

            return drawSpots;
        }

            int colorchanger = 0;
        private void PaintGraph()
        {
            Graphics g = CreateGraphics();
            g.DrawLines(new Pen(colors[colorchanger%7]), GetBinomialCoefficient());
                colorchanger++;
        }


        private void textBox1_TextChanged(object sender, EventArgs e)
        {
            
            
        }

        private void textBox1_Click(object sender, EventArgs e)
        {
            textBox1.Text = "";
        }

        private void n_TextChanged(object sender, EventArgs e)
        {

        }

        private void n_Click(object sender, EventArgs e)
        {
            n.Text = "";
        }

        private void p_Click(object sender, EventArgs e)
        {
            Possibility.Text = "";
        }


        
    }
}
